{"ast":null,"code":"var _jsxFileName = \"/home/gabon/Documents/Udemy React/Resources/Working with React Router/12-adv-starting-project/frontend/src/pages/NewEventPage.js\";\nimport React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: 'post'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\n//sending data to backend\n// comment out since we created an action that handles both EDIT and SAVING \n// export async function action({ request, params }) {\n//   // fetching the input data from the react Form component\n//   const data = await request.formData();\n//   //get the identifiers of input fields\n//   // const enteredTitle = data.get(\"title\")\n//   const eventData = {\n//     title: data.get(\"title\"),\n//     image: data.get(\"image\"),\n//     date: data.get(\"date\"),\n//     description: data.get(\"description\"),\n//   };\n//   //posting the data to backend\n//   const response = await fetch(\"http://localhost:8080/events\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(eventData),\n//   });\n//   if (response.status === 422) {   //status sent on backend\n//       return response\n//   }\n//   if (!response.ok) {\n//     throw json({ message: \"could not save event\" }, { status: 500 });\n//   }\n// //redirects user\n//   return redirect('/events')\n// }\n_c = NewEventPage;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gabon/Documents/Udemy React/Resources/Working with React Router/12-adv-starting-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json,redirect } from \"react-router-dom\";\nexport default function NewEventPage() {\n  return <EventForm method={'post'}/>;\n}\n\n//sending data to backend\n// comment out since we created an action that handles both EDIT and SAVING \n// export async function action({ request, params }) {\n//   // fetching the input data from the react Form component\n//   const data = await request.formData();\n//   //get the identifiers of input fields\n//   // const enteredTitle = data.get(\"title\")\n//   const eventData = {\n//     title: data.get(\"title\"),\n//     image: data.get(\"image\"),\n//     date: data.get(\"date\"),\n//     description: data.get(\"description\"),\n//   };\n//   //posting the data to backend\n//   const response = await fetch(\"http://localhost:8080/events\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(eventData),\n//   });\n//   if (response.status === 422) {   //status sent on backend\n//       return response\n//   }\n//   if (!response.ok) {\n//     throw json({ message: \"could not save event\" }, { status: 500 });\n//   }\n// //redirects user\n//   return redirect('/events')\n// }\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAACC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,oBAAOD,OAAA,CAACJ,SAAS;IAACM,MAAM,EAAE;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GAjCwBN,YAAY;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}