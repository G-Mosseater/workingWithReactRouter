{"ast":null,"code":"var _jsxFileName = \"/home/gabon/Documents/Udemy React/Resources/Working with React Router/12-adv-starting-project/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useParams, json, useLoaderData, useRouteLoaderData, redirect } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  // const params = useParams(); //gives us access to the values that are encoded in the URL, eventid in this case\n\n  // const data = useLoaderData()\n\n  //eventDetailpage route will search for the closest available userLoaderData and that is itself\n  //use routeLoaderData with a given id to specify where to look (it's parent)\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action({\n  params,\n  reqiest\n}) {\n  //get the id with params\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: \"DELETE\"\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return redirect(\"/events\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","json","useLoaderData","useRouteLoaderData","redirect","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","action","reqiest","method","$RefreshReg$"],"sources":["/home/gabon/Documents/Udemy React/Resources/Working with React Router/12-adv-starting-project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import {\n  useParams,\n  json,\n  useLoaderData,\n  useRouteLoaderData,\n  redirect\n} from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nexport default function EventDetailPage() {\n  // const params = useParams(); //gives us access to the values that are encoded in the URL, eventid in this case\n\n  // const data = useLoaderData()\n\n  //eventDetailpage route will search for the closest available userLoaderData and that is itself\n  //use routeLoaderData with a given id to specify where to look (it's parent)\n  const data = useRouteLoaderData(\"event-detail\");\n\n  return (\n    <>\n      {/* <h1>EventDetailPage</h1>\n    <p>EVENT ID: {params.eventId}</p> */}\n\n      <EventItem event={data.event} />\n    </>\n  );\n}\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json(\n      { message: \"could not fetch details for selected event\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n}\n\nexport async function action({ params, reqiest }) {\n  //get the id with params\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {method: \"DELETE\"});\n    if (!response.ok) {\n    throw json(\n      { message: \"could not fetch details for selected event\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return redirect(\"/events\");\n  }\n}\n"],"mappings":";;AAAA,SACEA,SAAS,EACTC,IAAI,EACJC,aAAa,EACbC,kBAAkB,EAClBC,QAAQ,QACH,kBAAkB;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAChD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC;;EAEA;;EAEA;EACA;EACA,MAAMC,IAAI,GAAGT,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAIEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP;AAACP,EAAA,CAjBuBD,eAAe;EAAA,QAOxBP,kBAAkB;AAAA;AAAAgB,EAAA,GAPTT,eAAe;AAmBvC,OAAO,eAAeU,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM1B,IAAI,CACR;MAAE2B,OAAO,EAAE;IAA6C,CAAC,EACzD;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,eAAeK,MAAMA,CAAC;EAAER,MAAM;EAAES;AAAQ,CAAC,EAAE;EAChD;EACA,MAAMP,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,EAAE;IAACQ,MAAM,EAAE;EAAQ,CAAC,CAAC;EACzF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAClB,MAAM1B,IAAI,CACR;MAAE2B,OAAO,EAAE;IAA6C,CAAC,EACzD;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOzB,QAAQ,CAAC,SAAS,CAAC;EAC5B;AACF;AAAC,IAAAe,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}