{"ast":null,"code":"var _jsxFileName = \"/home/gabon/Documents/Udemy React/Resources/Working with React Router/12-adv-starting-project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\n\n//useLoaderData to get access to the \"closest\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 26\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n  //commented out because of defer\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  // const events = data.events;\n  // return <>{<EventsList events={events} />}</>;\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  // error handling\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw {message: \"Could not fetch events.\"}\n    // throw new Response(JSON.stringify({ message: \"could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    return json({\n      message: \"could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // const res = new Response('data',{status: 201})\n    // return response;\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\n\n// export async function loader() {\n//   // cannot use react hooks in the loader\n//   const response = await fetch(\"http://localhost:8080/events\");\n//   // error handling\n//   if (!response.ok) {\n//     // return { isError: true, message: \"Could not fetch events.\" };\n//     // throw {message: \"Could not fetch events.\"}\n//     // throw new Response(JSON.stringify({ message: \"could not fetch events.\" }), {\n//     //   status: 500,\n//     // });\n//     return json({ message: \"could not fetch events.\" }, { status: 500 });\n//   } else {\n//     // const resData = await response.json();\n//     // const res = new Response('data',{status: 201})\n//     return response;\n//   }\n// }\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["/home/gabon/Documents/Udemy React/Resources/Working with React Router/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\n\n//useLoaderData to get access to the \"closest\"\nfunction EventsPage() {\n  const { events } = useLoaderData();\n\n  return (\n    <Suspense fallback={ <p>Loading...</p> }>\n    <Await resolve={events}>\n      {(loadedEvents) => <EventsList events={loadedEvents} />}\n    </Await>\n    </Suspense>\n  );\n  //commented out because of defer\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  // const events = data.events;\n  // return <>{<EventsList events={events} />}</>;\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  // error handling\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw {message: \"Could not fetch events.\"}\n    // throw new Response(JSON.stringify({ message: \"could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    return json({ message: \"could not fetch events.\" }, { status: 500 });\n  } else {\n    // const resData = await response.json();\n    // const res = new Response('data',{status: 201})\n    // return response;\n    const resData = await response.json()\n    return resData.events\n  }\n}\n\nexport function loader() {\n  return defer({\n    events: loadEvents(),\n  });\n}\n\n// export async function loader() {\n//   // cannot use react hooks in the loader\n//   const response = await fetch(\"http://localhost:8080/events\");\n//   // error handling\n//   if (!response.ok) {\n//     // return { isError: true, message: \"Could not fetch events.\" };\n//     // throw {message: \"Could not fetch events.\"}\n//     // throw new Response(JSON.stringify({ message: \"could not fetch events.\" }), {\n//     //   status: 500,\n//     // });\n//     return json({ message: \"could not fetch events.\" }, { status: 500 });\n//   } else {\n//     // const resData = await response.json();\n//     // const res = new Response('data',{status: 201})\n//     return response;\n//   }\n// }\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGV,aAAa,CAAC,CAAC;EAElC,oBACEO,OAAA,CAACF,QAAQ;IAACM,QAAQ,eAAGJ,OAAA;MAAAK,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAG;IAAAJ,QAAA,eACxCL,OAAA,CAACJ,KAAK;MAACc,OAAO,EAAEP,MAAO;MAAAE,QAAA,EACnBM,YAAY,iBAAKX,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEQ;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;EAEb;EACA;EACA;EACA;EACA;EACA;AACF;AAACP,EAAA,CAhBQD,UAAU;EAAA,QACER,aAAa;AAAA;AAAAmB,EAAA,GADzBX,UAAU;AAkBnB,eAAeA,UAAU;AAEzB,eAAeY,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D;EACA,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA,OAAOtB,IAAI,CAAC;MAAEuB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACtE,CAAC,MAAM;IACL;IACA;IACA;IACA,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACpB,IAAI,CAAC,CAAC;IACrC,OAAOyB,OAAO,CAAChB,MAAM;EACvB;AACF;AAEA,OAAO,SAASiB,MAAMA,CAAA,EAAG;EACvB,OAAOzB,KAAK,CAAC;IACXQ,MAAM,EAAEU,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}